Texture2D shaderTexture;
SamplerState sampleType;

cbuffer LightBuffer
{
	float4 ambientColor;
	float4 diffuseColor;
	float3 lightDirection;
	float pad01;
};

struct PixelInput
{
	float4 position : SV_POSITION;
	float2 tex : TEXCOORD0;
	float3 normal : NORMAL;
};

float4 DiffusePixelShader(PixelInput input) : SV_TARGET
{
	float4 textureColor = shaderTexture.Sample(sampleType, input.tex);
	float4 color = ambientColor;

	float lightIntensity = saturate(dot(input.normal, -lightDirection));
	if (lightIntensity > 0.0)
	{
		color += (diffuseColor * lightIntensity);
	}

	color = saturate(color);
	color = color * textureColor;

	return color;
}